Index: alembic.ini
===================================================================
diff --git a/alembic.ini b/src/alembic.ini
rename from alembic.ini
rename to src/alembic.ini
--- a/alembic.ini	
+++ b/src/alembic.ini	
@@ -12,7 +12,7 @@
 
 # sys.path path, will be prepended to sys.path if present.
 # defaults to the current working directory.
-prepend_sys_path = .
+# prepend_sys_path = .
 
 # timezone to use when rendering the date within the migration file
 # as well as the filename.
@@ -55,8 +55,11 @@
 # are written from script.py.mako
 # output_encoding = utf-8
 
+# sqlalchemy.url = postgresql+asyncpg://%(POSTGRES_USER)s:%(POSTGRES_PASSWORD)s@%{POSTGRES_SERVER_DOCKER)s:%(POSTGRES_PORT)s/%(POSTGRES_DB)s?async_fallback=True
 sqlalchemy.url = postgresql+asyncpg://%(POSTGRES_USER)s:%(POSTGRES_PASSWORD)s@%{POSTGRES_SERVER_DOCKER)s:%(POSTGRES_PORT)s/%(POSTGRES_DB)s?async_fallback=True
 
+# sqlalchemy.url = %(ASYNC_DATABASE_URL)s?async_fallback=True
+
 
 
 [post_write_hooks]
Index: .idea/vcs.xml
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/vcs.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	
+++ b/.gitignore	
@@ -102,7 +102,7 @@
 *.sage.py
 
 # Environments
-.env
+src/.env
 .venv
 env/
 venv/
Index: docker-compose.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>version: '3.5'\n\nservices:\n  postgres:\n    env_file:\n      - \".env\"\n    restart: always\n    container_name: postgres_db_app\n    image: postgres\n    environment:\n      POSTGRES_USER: ${POSTGRES_USER}\n      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}\n      POSTGRES_DB: ${POSTGRES_DB}\n      PGDATA: /postgres/data/\n    ports:\n      - \"5433:5432\"\n    networks:\n      - postgres\n\n  pgadmin:\n    image: dpage/pgadmin4:latest\n    container_name: pg_admin_fastapi\n    restart: always\n    env_file:\n      - \".env\"\n    environment:\n      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}\n      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}\n    ports:\n        - \"5050:80\"\n    networks:\n      - postgres\n    depends_on:\n      - postgres\n\nnetworks:\n  postgres:\n    driver: bridge
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docker-compose.yaml b/docker-compose.yaml
--- a/docker-compose.yaml	
+++ b/docker-compose.yaml	
@@ -3,7 +3,7 @@
 services:
   postgres:
     env_file:
-      - ".env"
+      - "src/.env"
     restart: always
     container_name: postgres_db_app
     image: postgres
@@ -22,7 +22,7 @@
     container_name: pg_admin_fastapi
     restart: always
     env_file:
-      - ".env"
+      - "src/.env"
     environment:
       PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
       PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
Index: .idea/inspectionProfiles/Project_Default.xml
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/inspectionProfiles/Project_Default.xml	
@@ -0,0 +1,15 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="HtmlUnknownAttribute" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="myValues">
+        <value>
+          <list size="1">
+            <item index="0" class="java.lang.String" itemvalue="static" />
+          </list>
+        </value>
+      </option>
+      <option name="myCustomValuesEnabled" value="true" />
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
Index: migrations/env.py
===================================================================
diff --git a/migrations/env.py b/src/migrations/env.py
rename from migrations/env.py
rename to src/migrations/env.py
--- a/migrations/env.py	
+++ b/src/migrations/env.py	
@@ -5,16 +5,25 @@
 
 from alembic import context
 from src.auth.models import metadata as auth_metadata
+from src.config import settings
 # from src.strains.models import metadata as strain_metadata
 # from src.categories.models import metadata as categories_metadata
 
-# import os
-# import sys
+import os
+import sys
 
-# sys.path.append(os.path.join(sys.path[0], 'src'))
+sys.path.append(os.path.join(sys.path[0], 'src'))
 # this is the Alembic Config object, which provides
 # access to the values within the .ini file in use.
 config = context.config
+section = config.config_ini_section
+
+# config.set_section_option(section, 'POSTGRES_USER', settings.POSTGRES_USER)
+# config.set_section_option(section, 'POSTGRES_PASSWORD', settings.POSTGRES_PASSWORD)
+# config.set_section_option(section, 'POSTGRES_SERVER_DOCKER', settings.POSTGRES_SERVER_DOCKER)
+# config.set_section_option(section, 'POSTGRES_PORT', settings.POSTGRES_PORT)
+# config.set_section_option(section, 'POSTGRES_DB', settings.POSTGRES_DB)
+# config.set_section_option(section, 'ASYNC_DATABASE_URL', settings.ASYNC_DATABASE_URL)
 
 # Interpret the config file for Python logging.
 # This line sets up loggers basically.
@@ -27,6 +36,7 @@
 # target_metadata = mymodel.Base.metadata
 target_metadata = [auth_metadata]
 
+
 # other values from the config, defined by the needs of env.py,
 # can be acquired:
 # my_important_option = config.get_main_option("my_important_option")
Index: .idea/inspectionProfiles/profiles_settings.xml
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/inspectionProfiles/profiles_settings.xml	
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: src/config.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from pydantic import BaseSettings\nimport os\nfrom dotenv import load_dotenv\n\n\nfrom pathlib import Path\nenv_path = Path('..') / '.env'\nload_dotenv(dotenv_path=env_path)\n\n\nclass Settings(BaseSettings):\n    server_host: str = \"127.0.0.1\"\n    server_port: int = 8000\n    POSTGRES_USER: str = os.getenv(\"POSTGRES_USER\")\n    POSTGRES_PASSWORD: str = os.getenv(\"POSTGRES_PASSWORD\")\n    POSTGRES_SERVER_DOCKER: str = os.getenv(\"POSTGRES_SERVER_DOCKER\", \"172.26.0.3\")\n    POSTGRES_SERVER_LOCALHOST: str = os.getenv(\"POSTGRES_SERVER_LOCALHOST\", \"localhost\")\n    POSTGRES_PORT: str = os.getenv(\"POSTGRES_PORT\", 5432)  # default postgres port is 5432\n    POSTGRES_DB: str = os.getenv(\"POSTGRES_DB\", \"postgres\")\n    PGADMIN_DEFAULT_EMAIL: str = os.getenv(\"PGADMIN_DEFAULT_EMAIL\")\n    PGADMIN_DEFAULT_PASSWORD: str = os.getenv(\"PGADMIN_DEFAULT_PASSWORD\")\n    DATABASE_URL = f\"postgresql://{POSTGRES_USER}:{POSTGRES_PASSWORD}@{POSTGRES_SERVER_DOCKER}:{POSTGRES_PORT}/{POSTGRES_DB}\"\n    ASYNC_DATABASE_URL = f\"postgresql+asyncpg://{POSTGRES_USER}:{POSTGRES_PASSWORD}@{POSTGRES_SERVER_DOCKER}:{POSTGRES_PORT}/{POSTGRES_DB}\"\n\n\nclass Secrets(Settings):\n    secret_key_auth_jwt = \"SECRET\"\n\n\nsettings = Settings(\n    _env_file='../.env',\n    _env_file_encoding='utf-8')
===================================================================
diff --git a/src/config.py b/src/config.py
--- a/src/config.py	
+++ b/src/config.py	
@@ -28,5 +28,5 @@
 
 
 settings = Settings(
-    _env_file='../.env',
+    _env_file='.env',
     _env_file_encoding='utf-8')
\ No newline at end of file
diff --git a/migrations/versions/f4aa19d8d8c2_.py b/src/migrations/versions/f4aa19d8d8c2_.py
rename from migrations/versions/f4aa19d8d8c2_.py
rename to src/migrations/versions/f4aa19d8d8c2_.py
